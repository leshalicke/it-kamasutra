{"version":3,"file":"static/js/29.1ddf4e9d.chunk.js","mappings":"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","sources":["webpack://react-01/./src/components/Profile/Profile.module.css?b512","webpack://react-01/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-01/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-01/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","hoc/withURLParams.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__vDrrL\"};","// extracted by mini-css-extract-plugin\nexport default {\"descBlock\":\"ProfileInfo_descBlock__+id8Q\",\"contact\":\"ProfileInfo_contact__NOhqZ\",\"formSummaryError\":\"ProfileInfo_formSummaryError__i7K3p\"};","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <b>Status:</b><span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n        </div>}\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\r\n  return <form onSubmit={handleSubmit}>\r\n    <div><button >save</button></div>\r\n    { error && <div className={s.formSummaryError}>\r\n        {error}\r\n      </div>}\r\n    <div>\r\n      <b>Full name</b>: {createField('Full name', 'fullname', [], Input)}\r\n    </div>\r\n    <div>\r\n      <b>Loocking for a job</b>:  {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n    </div>\r\n    <div>\r\n      <b>My professional skills</b>: {createField('My profession skills', 'lookingForAJobDescription', [], Textarea)}\r\n    </div>\r\n    <div>\r\n      <b>About me</b>: {createField('About me', 'aboutMe', [], Textarea)}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n          <b>{key}:{createField(key, \"contacts.\" + key, [], Input)}</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: \"edit-profile\",\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: false\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from './../../../assets/image/user.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  };\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descBlock}  >\r\n        <img src={props.profile.photos.large || userPhoto} />\r\n        {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        {editMode \r\n        ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} /> \r\n        : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner}/>}\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Loocking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>}\r\n      <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n};\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact} ><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__LVwGo\",\"posts\":\"MyPosts_posts__kTilN\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ghaau\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <div>\r\n      <img src= 'https://thumbs.dreamstime.com/b/happy-smiling-geek-hipster-beard-man-cool-avatar-geek-man-avatar-104871313.jpg' />\r\n      { props.message }\r\n      \r\n      </div>\r\n        <div>\r\n        <span>like</span> { props.like }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n\r\n// https://www.pngall.com/wp-content/uploads/12/Avatar-Profile-Vector.png\r\n// https://thumbs.dreamstime.com/b/happy-smiling-geek-hipster-beard-man-cool-avatar-geek-man-avatar-104871313.jpg","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n          <div>\r\n            <Field component={Textarea} name={'newPostText'} \r\n            placeholder='Enter your Post' validate={[required, maxLength10]} />\r\n          </div>\r\n          <div>\r\n          <button>Add post</button>\r\n          </div>\r\n        </div>\r\n    </form>\r\n  )\r\n  };\r\n  \r\n  const AddPostFormRedux = reduxForm ({form:'ProfileAddPostForm'}) (AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //   return nextProps !== this.props || nextState !== this.state;\r\n  // }\r\n\r\n  let postsElement = props.posts.map ( p => <Post key={p.id} message={p.message} like={p.like} />)\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  const AddNewPost = (values) => {\r\n    props.onAddPost(values.newPostText)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.postsBlock}>\r\n        <h3>My post</h3>\r\n      </div>\r\n      <AddPostFormRedux onSubmit={AddNewPost}/>\r\n      <div className={s.posts}>\r\n      { postsElement }\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport {  addPostActionCreator} from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))}\r\n  }\r\n};\r\n\r\nexport const MyPostsContainer =  connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div>\r\n        <ProfileInfo isOwner={props.isOwner} profile={props.profile} \r\n        status={props.status} updateStatus={props.updateStatus} \r\n        savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst WithURLParams = (Component) => {\r\n\tconst WithURLParamsWrapper = (props) => {\r\n\t\tconst params = useParams();\r\n\t\treturn <Component {...props} params={params}/>\r\n\t}\r\n\treturn WithURLParamsWrapper;\r\n};\r\n\r\nexport default WithURLParams;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from './../../Redux/profile-reducer';\r\nimport {AuthRedirect} from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport WithURLParams from './../../hoc/withURLParams'\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile(){\r\n    let userId = this.props.params?.userId ? this.props.params?.userId : this.props.authorizedUserId;\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  };\r\n\r\ncomponentDidMount() {\r\n\r\n  this.refreshProfile()\r\n};\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n  if(this.props.params?.userId != prevProps.params?.userId){\r\n    this.refreshProfile();\r\n  }\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} \r\n      profile={this.props.profile} \r\n      status={this.props.status} \r\n      updateStatus={this.props.updateStatus} \r\n      isOwner={!this.props.params?.userId} \r\n      savePhoto={this.props.savePhoto}/>\r\n    )\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\nAuthRedirect, WithURLParams\r\n) (ProfileContainer)\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","enableReinitialize","destroyOnUnmount","handleSubmit","profile","error","onSubmit","className","s","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","src","photos","large","userPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","message","like","maxLength10","maxLengthCreator","AddPostFormRedux","Field","component","name","placeholder","validate","required","React","postsElement","posts","p","id","values","onAddPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","Component","params","useParams","ProfileContainer","userId","this","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","auth","isAuth","AuthRedirect","WithURLParams"],"sourceRoot":""}